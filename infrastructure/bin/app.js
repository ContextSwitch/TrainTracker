#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const network_stack_1 = require("../lib/network-stack");
const storage_stack_1 = require("../lib/storage-stack");
const ecs_stack_1 = require("../lib/ecs-stack");
const scheduler_stack_1 = require("../lib/scheduler-stack");
const app = new cdk.App();
// Create network stack
const networkStack = new network_stack_1.NetworkStack(app, 'TrainTracker-Network', {
    env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: process.env.CDK_DEFAULT_REGION },
    description: 'Network infrastructure for TrainTracker application'
});
// Create storage stack
const storageStack = new storage_stack_1.StorageStack(app, 'TrainTracker-Storage', {
    env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: process.env.CDK_DEFAULT_REGION },
    description: 'Storage infrastructure for TrainTracker application'
});
// Create ECS stack
const ecsStack = new ecs_stack_1.EcsStack(app, 'TrainTracker-App', {
    env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: process.env.CDK_DEFAULT_REGION },
    description: 'ECS infrastructure for TrainTracker application',
    vpc: networkStack.vpc,
    albSecurityGroup: networkStack.albSecurityGroup,
    ecsSecurityGroup: networkStack.ecsSecurityGroup,
    repository: storageStack.repository
});
// Create Scheduler stack for cron job
const schedulerStack = new scheduler_stack_1.SchedulerStack(app, 'TrainTracker-Scheduler', {
    env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: process.env.CDK_DEFAULT_REGION },
    description: 'Scheduler infrastructure for TrainTracker cron jobs',
    apiUrl: 'https://www.chiefjourney.com/api/cron'
});
// Add dependencies
ecsStack.addDependency(networkStack);
ecsStack.addDependency(storageStack);
schedulerStack.addDependency(ecsStack);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLHVDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsd0RBQW9EO0FBQ3BELHdEQUFvRDtBQUNwRCxnREFBNEM7QUFDNUMsNERBQXdEO0FBRXhELE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBRTFCLHVCQUF1QjtBQUN2QixNQUFNLFlBQVksR0FBRyxJQUFJLDRCQUFZLENBQUMsR0FBRyxFQUFFLHNCQUFzQixFQUFFO0lBQ2pFLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFO0lBQ3pGLFdBQVcsRUFBRSxxREFBcUQ7Q0FDbkUsQ0FBQyxDQUFDO0FBRUgsdUJBQXVCO0FBQ3ZCLE1BQU0sWUFBWSxHQUFHLElBQUksNEJBQVksQ0FBQyxHQUFHLEVBQUUsc0JBQXNCLEVBQUU7SUFDakUsR0FBRyxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUU7SUFDekYsV0FBVyxFQUFFLHFEQUFxRDtDQUNuRSxDQUFDLENBQUM7QUFFSCxtQkFBbUI7QUFDbkIsTUFBTSxRQUFRLEdBQUcsSUFBSSxvQkFBUSxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsRUFBRTtJQUNyRCxHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRTtJQUN6RixXQUFXLEVBQUUsaURBQWlEO0lBQzlELEdBQUcsRUFBRSxZQUFZLENBQUMsR0FBRztJQUNyQixnQkFBZ0IsRUFBRSxZQUFZLENBQUMsZ0JBQWdCO0lBQy9DLGdCQUFnQixFQUFFLFlBQVksQ0FBQyxnQkFBZ0I7SUFDL0MsVUFBVSxFQUFFLFlBQVksQ0FBQyxVQUFVO0NBQ3BDLENBQUMsQ0FBQztBQUVILHNDQUFzQztBQUN0QyxNQUFNLGNBQWMsR0FBRyxJQUFJLGdDQUFjLENBQUMsR0FBRyxFQUFFLHdCQUF3QixFQUFFO0lBQ3ZFLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFO0lBQ3pGLFdBQVcsRUFBRSxxREFBcUQ7SUFDbEUsTUFBTSxFQUFFLHVDQUF1QztDQUNoRCxDQUFDLENBQUM7QUFFSCxtQkFBbUI7QUFDbkIsUUFBUSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNyQyxRQUFRLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3JDLGNBQWMsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5pbXBvcnQgJ3NvdXJjZS1tYXAtc3VwcG9ydC9yZWdpc3Rlcic7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgTmV0d29ya1N0YWNrIH0gZnJvbSAnLi4vbGliL25ldHdvcmstc3RhY2snO1xuaW1wb3J0IHsgU3RvcmFnZVN0YWNrIH0gZnJvbSAnLi4vbGliL3N0b3JhZ2Utc3RhY2snO1xuaW1wb3J0IHsgRWNzU3RhY2sgfSBmcm9tICcuLi9saWIvZWNzLXN0YWNrJztcbmltcG9ydCB7IFNjaGVkdWxlclN0YWNrIH0gZnJvbSAnLi4vbGliL3NjaGVkdWxlci1zdGFjayc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbi8vIENyZWF0ZSBuZXR3b3JrIHN0YWNrXG5jb25zdCBuZXR3b3JrU3RhY2sgPSBuZXcgTmV0d29ya1N0YWNrKGFwcCwgJ1RyYWluVHJhY2tlci1OZXR3b3JrJywge1xuICBlbnY6IHsgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCwgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04gfSxcbiAgZGVzY3JpcHRpb246ICdOZXR3b3JrIGluZnJhc3RydWN0dXJlIGZvciBUcmFpblRyYWNrZXIgYXBwbGljYXRpb24nXG59KTtcblxuLy8gQ3JlYXRlIHN0b3JhZ2Ugc3RhY2tcbmNvbnN0IHN0b3JhZ2VTdGFjayA9IG5ldyBTdG9yYWdlU3RhY2soYXBwLCAnVHJhaW5UcmFja2VyLVN0b3JhZ2UnLCB7XG4gIGVudjogeyBhY2NvdW50OiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5ULCByZWdpb246IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX1JFR0lPTiB9LFxuICBkZXNjcmlwdGlvbjogJ1N0b3JhZ2UgaW5mcmFzdHJ1Y3R1cmUgZm9yIFRyYWluVHJhY2tlciBhcHBsaWNhdGlvbidcbn0pO1xuXG4vLyBDcmVhdGUgRUNTIHN0YWNrXG5jb25zdCBlY3NTdGFjayA9IG5ldyBFY3NTdGFjayhhcHAsICdUcmFpblRyYWNrZXItQXBwJywge1xuICBlbnY6IHsgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCwgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04gfSxcbiAgZGVzY3JpcHRpb246ICdFQ1MgaW5mcmFzdHJ1Y3R1cmUgZm9yIFRyYWluVHJhY2tlciBhcHBsaWNhdGlvbicsXG4gIHZwYzogbmV0d29ya1N0YWNrLnZwYyxcbiAgYWxiU2VjdXJpdHlHcm91cDogbmV0d29ya1N0YWNrLmFsYlNlY3VyaXR5R3JvdXAsXG4gIGVjc1NlY3VyaXR5R3JvdXA6IG5ldHdvcmtTdGFjay5lY3NTZWN1cml0eUdyb3VwLFxuICByZXBvc2l0b3J5OiBzdG9yYWdlU3RhY2sucmVwb3NpdG9yeVxufSk7XG5cbi8vIENyZWF0ZSBTY2hlZHVsZXIgc3RhY2sgZm9yIGNyb24gam9iXG5jb25zdCBzY2hlZHVsZXJTdGFjayA9IG5ldyBTY2hlZHVsZXJTdGFjayhhcHAsICdUcmFpblRyYWNrZXItU2NoZWR1bGVyJywge1xuICBlbnY6IHsgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCwgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04gfSxcbiAgZGVzY3JpcHRpb246ICdTY2hlZHVsZXIgaW5mcmFzdHJ1Y3R1cmUgZm9yIFRyYWluVHJhY2tlciBjcm9uIGpvYnMnLFxuICBhcGlVcmw6ICdodHRwczovL3d3dy5jaGllZmpvdXJuZXkuY29tL2FwaS9jcm9uJ1xufSk7XG5cbi8vIEFkZCBkZXBlbmRlbmNpZXNcbmVjc1N0YWNrLmFkZERlcGVuZGVuY3kobmV0d29ya1N0YWNrKTtcbmVjc1N0YWNrLmFkZERlcGVuZGVuY3koc3RvcmFnZVN0YWNrKTtcbnNjaGVkdWxlclN0YWNrLmFkZERlcGVuZGVuY3koZWNzU3RhY2spO1xuIl19